<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="LogLikelihood_8h" kind="file" language="C++">
    <compoundname>LogLikelihood.h</compoundname>
    <includes local="no">vector</includes>
    <includes local="no">iostream</includes>
    <includes local="no">string</includes>
    <includes local="no">iomanip</includes>
    <includes local="yes">../libs/Eigen/Core</includes>
    <includes local="yes">../libs/Eigen/Householder</includes>
    <includes local="yes">../libs/Eigen/QR</includes>
    <includes local="no">algorithm</includes>
    <includes refid="Star_8h" local="yes">../DataHandling/Star.h</includes>
    <includes refid="GlobalVariables_8h" local="yes">../Main/GlobalVariables.h</includes>
    <includes refid="DataStorage_8h" local="yes">DataStorage.h</includes>
    <includes refid="ProbabilityFunctions_8h" local="yes">ProbabilityFunctions.h</includes>
    <includedby refid="LogLikelihoodPrior_8h" local="yes">/home/fraserj/Documents/Work/GaiaSelectionFunction/Code/Theia/src/Likelihood/LogLikelihoodPrior.h</includedby>
    <incdepgraph>
      <node id="235">
        <label>../libs/JSL/JSL.h</label>
      </node>
      <node id="225">
        <label>iomanip</label>
      </node>
      <node id="240">
        <label>cmath</label>
      </node>
      <node id="224">
        <label>string</label>
      </node>
      <node id="231">
        <label>../Main/GlobalVariables.h</label>
        <link refid="GlobalVariables_8h_source"/>
        <childnode refid="222" relation="include">
        </childnode>
        <childnode refid="226" relation="include">
        </childnode>
        <childnode refid="227" relation="include">
        </childnode>
        <childnode refid="228" relation="include">
        </childnode>
        <childnode refid="232" relation="include">
        </childnode>
        <childnode refid="233" relation="include">
        </childnode>
        <childnode refid="234" relation="include">
        </childnode>
        <childnode refid="223" relation="include">
        </childnode>
        <childnode refid="235" relation="include">
        </childnode>
        <childnode refid="225" relation="include">
        </childnode>
      </node>
      <node id="238">
        <label>MiscFunctions.h</label>
        <link refid="MiscFunctions_8h_source"/>
        <childnode refid="231" relation="include">
        </childnode>
        <childnode refid="237" relation="include">
        </childnode>
      </node>
      <node id="233">
        <label>fstream</label>
      </node>
      <node id="236">
        <label>DataStorage.h</label>
        <link refid="DataStorage_8h_source"/>
        <childnode refid="231" relation="include">
        </childnode>
        <childnode refid="237" relation="include">
        </childnode>
        <childnode refid="230" relation="include">
        </childnode>
        <childnode refid="238" relation="include">
        </childnode>
        <childnode refid="224" relation="include">
        </childnode>
        <childnode refid="222" relation="include">
        </childnode>
        <childnode refid="235" relation="include">
        </childnode>
      </node>
      <node id="227">
        <label>../libs/Eigen/Householder</label>
      </node>
      <node id="230">
        <label>../DataHandling/Star.h</label>
        <link refid="Star_8h_source"/>
        <childnode refid="222" relation="include">
        </childnode>
        <childnode refid="224" relation="include">
        </childnode>
        <childnode refid="223" relation="include">
        </childnode>
      </node>
      <node id="234">
        <label>string.h</label>
      </node>
      <node id="239">
        <label>ProbabilityFunctions.h</label>
        <link refid="ProbabilityFunctions_8h_source"/>
        <childnode refid="231" relation="include">
        </childnode>
        <childnode refid="237" relation="include">
        </childnode>
        <childnode refid="236" relation="include">
        </childnode>
        <childnode refid="238" relation="include">
        </childnode>
        <childnode refid="240" relation="include">
        </childnode>
      </node>
      <node id="222">
        <label>vector</label>
      </node>
      <node id="226">
        <label>../libs/Eigen/Core</label>
      </node>
      <node id="223">
        <label>iostream</label>
      </node>
      <node id="228">
        <label>../libs/Eigen/QR</label>
      </node>
      <node id="232">
        <label>../libs/Eigen/LU</label>
      </node>
      <node id="237">
        <label>../Main/GlobalConstants.h</label>
        <link refid="GlobalConstants_8h_source"/>
        <childnode refid="231" relation="include">
        </childnode>
      </node>
      <node id="221">
        <label>/home/fraserj/Documents/Work/GaiaSelectionFunction/Code/Theia/src/Likelihood/LogLikelihood.h</label>
        <link refid="LogLikelihood_8h"/>
        <childnode refid="222" relation="include">
        </childnode>
        <childnode refid="223" relation="include">
        </childnode>
        <childnode refid="224" relation="include">
        </childnode>
        <childnode refid="225" relation="include">
        </childnode>
        <childnode refid="226" relation="include">
        </childnode>
        <childnode refid="227" relation="include">
        </childnode>
        <childnode refid="228" relation="include">
        </childnode>
        <childnode refid="229" relation="include">
        </childnode>
        <childnode refid="230" relation="include">
        </childnode>
        <childnode refid="231" relation="include">
        </childnode>
        <childnode refid="236" relation="include">
        </childnode>
        <childnode refid="239" relation="include">
        </childnode>
      </node>
      <node id="229">
        <label>algorithm</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="243">
        <label>/home/fraserj/Documents/Work/GaiaSelectionFunction/Code/Theia/src/Optimizer/DescentFunctor.h</label>
        <link refid="DescentFunctor_8h_source"/>
      </node>
      <node id="242">
        <label>/home/fraserj/Documents/Work/GaiaSelectionFunction/Code/Theia/src/Likelihood/LogLikelihoodPrior.h</label>
        <link refid="LogLikelihoodPrior_8h_source"/>
        <childnode refid="243" relation="include">
        </childnode>
      </node>
      <node id="241">
        <label>/home/fraserj/Documents/Work/GaiaSelectionFunction/Code/Theia/src/Likelihood/LogLikelihood.h</label>
        <link refid="LogLikelihood_8h"/>
        <childnode refid="242" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classLogLikelihood" prot="public">LogLikelihood</innerclass>
    <innernamespace refid="namespaceEigen">Eigen</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="LogLikelihood_8h_1aa69893f50bcb8cec4064f6bc1017497f" prot="public" static="no">
        <name>EIGEN_STACK_ALLOCATION_LIMIT</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fraserj/Documents/Work/GaiaSelectionFunction/Code/Theia/src/Likelihood/LogLikelihood.h" line="6" column="14" bodyfile="/home/fraserj/Documents/Work/GaiaSelectionFunction/Code/Theia/src/Likelihood/LogLikelihood.h" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="LogLikelihood_8h_1a56e1504926ca8dfaa658bed64aa32207" prot="public" static="no">
        <name>EIGEN_MPL2_ONLY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fraserj/Documents/Work/GaiaSelectionFunction/Code/Theia/src/Likelihood/LogLikelihood.h" line="12" column="9" bodyfile="/home/fraserj/Documents/Work/GaiaSelectionFunction/Code/Theia/src/Likelihood/LogLikelihood.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EIGEN_STACK_ALLOCATION_LIMIT<sp/>0<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../libs/Eigen/Core&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../libs/Eigen/Householder&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../libs/Eigen/QR&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EIGEN_MPL2_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../DataHandling/Star.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Main/GlobalVariables.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;DataStorage.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ProbabilityFunctions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Eigen::VectorXd;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceEigen" kindref="compound">Eigen</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//Likelihood<sp/>class<sp/>acts<sp/>as<sp/>a<sp/>container<sp/>for<sp/>the<sp/>values<sp/>of<sp/>the<sp/>log<sp/>liklihood<sp/>and<sp/>its<sp/>gradient</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//Also<sp/>contains<sp/>the<sp/>data<sp/>necessary<sp/>to<sp/>update<sp/>these<sp/>values<sp/>when<sp/>Calculate(newPosition)<sp/>is<sp/>called</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="classLogLikelihood" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classLogLikelihood" kindref="compound">LogLikelihood</ref></highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Value;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>StarsUsed;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>Gradient;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classLogLikelihood" kindref="compound">LogLikelihood</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::vector&lt;Star&gt;&gt;<sp/>&amp;<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Calculate(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>&amp;<sp/>position,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>batchID,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>effectiveBatches,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxBatches);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classLikelihoodData" kindref="compound">LikelihoodData</ref><sp/>Data;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//member<sp/>data<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//internal<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Reset();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PerStarContribution(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>batchId,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>starID,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>&amp;<sp/>position);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GeneratePs(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classStar" kindref="compound">Star</ref><sp/>*<sp/>candidate,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>&amp;<sp/>position);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GenerateContribution(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classStar" kindref="compound">Star</ref><sp/>*<sp/>candidate);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AssignGradients(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classStar" kindref="compound">Star</ref><sp/>*<sp/>candidate);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NormalContribution(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classStar" kindref="compound">Star</ref><sp/>*<sp/>candidate);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PoissonContribution(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classStar" kindref="compound">Star</ref><sp/>*<sp/>candidate);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ExactPoissonContribution(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classStar" kindref="compound">Star</ref><sp/>*<sp/>candidate);</highlight></codeline>
<codeline lineno="51"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="/home/fraserj/Documents/Work/GaiaSelectionFunction/Code/Theia/src/Likelihood/LogLikelihood.h"/>
  </compounddef>
</doxygen>
