<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classLogLikelihoodPrior" kind="class" language="C++" prot="public">
    <compoundname>LogLikelihoodPrior</compoundname>
    <basecompoundref refid="classLogLikelihood" prot="public" virt="non-virtual">LogLikelihood</basecompoundref>
    <includes refid="LogLikelihoodPrior_8h" local="no">LogLikelihoodPrior.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classLogLikelihoodPrior_1aa769400889b28af885fde28e10dcfe58" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>LogLikelihoodPrior::LogLikelihoodPrior</definition>
        <argsstring>(const std::vector&lt; std::vector&lt; Star &gt;&gt; &amp;data)</argsstring>
        <name>LogLikelihoodPrior</name>
        <param>
          <type>const std::vector&lt; std::vector&lt; <ref refid="classStar" kindref="compound">Star</ref> &gt;&gt; &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fraserj/Documents/Work/GaiaSelectionFunction/Code/Theia/src/Likelihood/LogLikelihoodPrior.h" line="82" column="1" bodyfile="/home/fraserj/Documents/Work/GaiaSelectionFunction/Code/Theia/src/Likelihood/LogLikelihoodPrior.h" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classLogLikelihoodPrior_1a9ab6a300487baff78f0caeac3f3f75e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double LogLikelihoodPrior::TransformPrior</definition>
        <argsstring>(EfficiencyVector &amp;x, int effectiveBatches)</argsstring>
        <name>TransformPrior</name>
        <param>
          <type><ref refid="classEfficiencyVector" kindref="compound">EfficiencyVector</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>effectiveBatches</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Executes the Prior in transform space. Calls the TemporalBetaPrior on all x_t which lie within one of the pre-catalogued gaps, and hence ensures that our variance model expands to capture those gaps, rather than attempting to smooth over them. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The current efficiency vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>effectiveBatches</parametername>
</parameternamelist>
<parameterdescription>
<para>the current number of minibatches </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value of the prior. The associated gradients are loaded into <ref refid="classEfficiencyVector_1a810e0f6fba51ea2eacd3a3d986415fbc" kindref="member">EfficiencyVector::TransformedGradient</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fraserj/Documents/Work/GaiaSelectionFunction/Code/Theia/src/Likelihood/LogLikelihoodPrior.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classLogLikelihoodPrior_1a8fe936a7812290b880fb2283f0853310" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double LogLikelihoodPrior::RawPrior</definition>
        <argsstring>(EfficiencyVector &amp;x, int effectiveBatches)</argsstring>
        <name>RawPrior</name>
        <param>
          <type><ref refid="classEfficiencyVector" kindref="compound">EfficiencyVector</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>effectiveBatches</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Executes the Prior in Raw space. By design, the priors here are very simple (either <ref refid="LogLikelihoodPrior_8h_1a6dedf4c61aa1e85945bdeaa84a6a492d" kindref="member">Normal()</ref> or <ref refid="LogLikelihoodPrior_8h_1a147a8187d8f7795760e2126f0e295e8d" kindref="member">StudentT()</ref>) with zero mean and unit variance. The transform enforces any correlations or smoothing. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The current efficiency vector (which has had <ref refid="classEfficiencyVector_1a27e4486f1c1c6bd5a686b9878463981e" kindref="member">EfficiencyVector::BackwardTransform()</ref> already called on it) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>effectiveBatches</parametername>
</parameternamelist>
<parameterdescription>
<para>the current number of minibatches </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value of the prior. The associated gradients are loaded into <ref refid="classEfficiencyVector_1a8f6899a8c3efe809bbac5f50a2dc694b" kindref="member">EfficiencyVector::RawGradient</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fraserj/Documents/Work/GaiaSelectionFunction/Code/Theia/src/Likelihood/LogLikelihoodPrior.h" line="100" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A subclass of the <ref refid="classLogLikelihood" kindref="compound">LogLikelihood</ref>. This version is run by the Root process from within the <ref refid="classDescentFunctor" kindref="compound">DescentFunctor</ref> object. This object is almost identical to the base class, with the exception of its ability to call Prior functions. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="26">
        <label>LogLikelihoodPrior</label>
        <link refid="classLogLikelihoodPrior"/>
        <childnode refid="27" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27">
        <label>LogLikelihood</label>
        <link refid="classLogLikelihood"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="30">
        <label>LikelihoodData</label>
        <link refid="classLikelihoodData"/>
      </node>
      <node id="28">
        <label>LogLikelihoodPrior</label>
        <link refid="classLogLikelihoodPrior"/>
        <childnode refid="29" relation="public-inheritance">
        </childnode>
      </node>
      <node id="29">
        <label>LogLikelihood</label>
        <link refid="classLogLikelihood"/>
        <childnode refid="30" relation="usage">
          <edgelabel>Data</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/fraserj/Documents/Work/GaiaSelectionFunction/Code/Theia/src/Likelihood/LogLikelihoodPrior.h" line="80" column="1" bodyfile="/home/fraserj/Documents/Work/GaiaSelectionFunction/Code/Theia/src/Likelihood/LogLikelihoodPrior.h" bodystart="79" bodyend="103"/>
    <listofallmembers>
      <member refid="classLogLikelihood_1a525d4693f7231cb70405af68d2c2c6e9" prot="protected" virt="non-virtual"><scope>LogLikelihoodPrior</scope><name>AssignGradients</name></member>
      <member refid="classLogLikelihood_1af963f0f27156553eb1ac94355c83792b" prot="public" virt="non-virtual"><scope>LogLikelihoodPrior</scope><name>Calculate</name></member>
      <member refid="classLogLikelihood_1ae89760ae57fa9e0ce5ef01c2b35cf487" prot="protected" virt="non-virtual"><scope>LogLikelihoodPrior</scope><name>Data</name></member>
      <member refid="classLogLikelihood_1ac848d93699c16868bf4da1884fe5c45a" prot="protected" virt="non-virtual"><scope>LogLikelihoodPrior</scope><name>ExactPoissonContribution</name></member>
      <member refid="classLogLikelihood_1ae0db177a301dbcb1ceb13575585dc2b2" prot="protected" virt="non-virtual"><scope>LogLikelihoodPrior</scope><name>GenerateContribution</name></member>
      <member refid="classLogLikelihood_1a84ab748f78cdfaac5763d4cf020166ee" prot="protected" virt="non-virtual"><scope>LogLikelihoodPrior</scope><name>GeneratePs</name></member>
      <member refid="classLogLikelihood_1af6d93b053cfdc1966318018831a849ec" prot="public" virt="non-virtual"><scope>LogLikelihoodPrior</scope><name>Gradient</name></member>
      <member refid="classLogLikelihood_1a2dabecfc63956f1527ccda8098d63bf5" prot="public" virt="non-virtual"><scope>LogLikelihoodPrior</scope><name>LogLikelihood</name></member>
      <member refid="classLogLikelihoodPrior_1aa769400889b28af885fde28e10dcfe58" prot="public" virt="non-virtual"><scope>LogLikelihoodPrior</scope><name>LogLikelihoodPrior</name></member>
      <member refid="classLogLikelihood_1a45c146d322f6a78b760383b624df66c8" prot="protected" virt="non-virtual"><scope>LogLikelihoodPrior</scope><name>NormalContribution</name></member>
      <member refid="classLogLikelihood_1a03f95244f5a92714ef5d978d9f485970" prot="protected" virt="non-virtual"><scope>LogLikelihoodPrior</scope><name>PerStarContribution</name></member>
      <member refid="classLogLikelihood_1a48e99798d1bad7dc63fdf2019acc1c7b" prot="protected" virt="non-virtual"><scope>LogLikelihoodPrior</scope><name>PoissonContribution</name></member>
      <member refid="classLogLikelihoodPrior_1a8fe936a7812290b880fb2283f0853310" prot="public" virt="non-virtual"><scope>LogLikelihoodPrior</scope><name>RawPrior</name></member>
      <member refid="classLogLikelihood_1a323459623fea6256267c9724ceea8ec9" prot="protected" virt="non-virtual"><scope>LogLikelihoodPrior</scope><name>Reset</name></member>
      <member refid="classLogLikelihood_1a3a4e3a1d76a663bca3705b471af583cc" prot="public" virt="non-virtual"><scope>LogLikelihoodPrior</scope><name>StarsUsed</name></member>
      <member refid="classLogLikelihoodPrior_1a9ab6a300487baff78f0caeac3f3f75e8" prot="public" virt="non-virtual"><scope>LogLikelihoodPrior</scope><name>TransformPrior</name></member>
      <member refid="classLogLikelihood_1a97ff9863958ffb93e74da07721a30cc6" prot="public" virt="non-virtual"><scope>LogLikelihoodPrior</scope><name>Value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
